# Workflow f√ºr Home Assistant Custom Component mit HACS-Check und Tests
name: HACS Validation & Test 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_test.txt
      - name: Run flake8
        run: |
          flake8 custom_components/lambda_heat_pumps --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 custom_components/lambda_heat_pumps --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run pylint
        run: |
          pylint custom_components/lambda_heat_pumps --disable=all --enable=bad-continuation,bad-indentation,deprecated-module,invalid-name,missing-docstring,trailing-whitespace,unused-import,wrong-import-order

  unittest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_test.txt
      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=custom_components/lambda_heat_pumps --cov-report=xml --cov-report=term-missing
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  hacs:
    runs-on: ubuntu-latest
    needs: [lint, unittest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration

  release:
    runs-on: ubuntu-latest
    needs: [hacs]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## Changes in this Release:
            - Automated release from main branch
            - HACS validation passed
            - All tests passed
          draft: false
          prerelease: false
